plugins {
    id 'fabric-loom' version '0.5-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
def snapshotVersion = System.getenv("GITHUB_RUN_NUMBER")
version = snapshotVersion == null ? project.mod_version : "SNAPSHOT-" + snapshotVersion
group = project.maven_group


minecraft {
}

repositories {
    mavenCentral()
    maven { url 'https://repo.repsy.io/mvn/fadookie/particleman' }
}

dependencies {
    // Minecraft/Fabric deps
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Actual dependencies
    modImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0'
    modImplementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.0'
    modImplementation 'com.eliotlash.molang:molang:SNAPSHOT.8'
    modImplementation 'com.eliotlash.mclib:mclib:SNAPSHOT.8'
    compile project(':geckolib-core')

    // Shaded dependencies
    include group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0'
    include group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.0'
    include 'com.eliotlash.molang:molang:SNAPSHOT.8'
    include 'com.eliotlash.mclib:mclib:SNAPSHOT.8'
    include project(':geckolib-core')

    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'

    test {
        useJUnitPlatform()
    }
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
}

jar {
    exclude('software/bernie/example/**')
    exclude('assets/**')
    exclude('fabric.mod.json')
    exclude('META-INF/**')
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

jar {
    from "LICENSE"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(jar) {
                builtBy jar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
            artifactId = project.archives_base_name
        }
    }
    repositories {}
}